#!/bin/bash

GOPATH="$HOME/go"
if [ -d "$HOME/dev/go" ]; then
	GOPATH="$HOME/dev/go"

	# shellcheck disable=2086
	PATH=$(IFS=:; append "$GOPATH/bin" $PATH)
fi

if [ -d "$HOMEBREW_PREFIX/opt/go/libexec/bin" ]; then

	# shellcheck disable=2086
	PATH=$(IFS=:; append "$HOMEBREW_PREFIX/opt/go/libexec/bin" $PATH)
fi

export GOPATH PATH

# Clones the Go given Go project and cds into it. Works only for import paths.
#
# 	goclone github.com/...
#
# For GitHub projects, the "github.com/" may be skipped. For non-GitHub
# projects, we rely on `go get` to retrieve the project so its dependencies
# will also be downloaded.
goclone() {
	local name="$1"
	if [ -z "$name" ]; then
		echo "USAGE: goclone IMPORTPATH"
		return
	fi

	local dest="$GOPATH/src/$name"
	if [ ! -d "$dest" ]; then
		mkdir -p "$dest"
	fi

	local numParts
	numParts=$(IFS="/"; echo ${#${name[@]}})
	if [ "$numParts" -eq 2 ]; then
		# foo/bar => github.com/foo/bar
		goclone "github.com/$name"
		return
	fi

	case "$name" in
		github.com/*)
			git clone "https://$name.git" "$dest" || return
			;;
		*)
			go get -u -d -v -f "$name" || return
	esac

	cd "$dest" || return
}
